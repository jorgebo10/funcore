[versions]
arrow = "1.1.5"
arrowGradleConfig = "0.11.0"
coroutines = "1.6.4"
kotlin = "1.8.10"
kotest = "5.5.5"
kotest-plugin = "5.5.5"
kover = "0.6.1"
detekt = "1.22.0"
ktor = "2.2.4"
logback = "1.4.5"
sqldelight = "2.0.0-alpha05"
testcontainers = "1.17.6"
hikari = "5.0.1"
kotest-arrow = "1.3.0"
kotest-testcontainers = "1.3.4"
slugify = "3.0.2"
spotless = "6.16.0"
cohort = "1.7.3"


[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-fx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotest-arrow" }
kotest-arrow-fx = { module = "io.kotest.extensions:kotest-assertions-arrow-fx-coroutines", version.ref = "kotest-arrow" }
kotest-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-testcontainers" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson-jvm", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktor" }
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor" }
ktor-server-forwarded = { module = "io.ktor:ktor-server-forwarded-header", version.ref = "ktor" }
ktor-server-defaultheaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common-jvm", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }
ktor-server-double-receive = { module = "io.ktor:ktor-server-double-receive", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
sqldelight-jdbc = { module = "app.cash.sqldelight:jdbc-driver", version.ref = "sqldelight" }
sqldelight-mysql-dialect = { module = "app.cash.sqldeight:mysql-dialect", version.ref = "sqldelight" }
cohort-core = { module = "com.sksamuel.cohort:cohort-core", version.ref = "cohort" }
cohort-ktor = { module = "com.sksamuel.cohort:cohort-ktor2", version.ref = "cohort" }
cohort-hikari = { module = "com.sksamuel.cohort:cohort-hikari", version.ref = "cohort" }

[bundles]
arrow = [
    "arrow-core",
    "arrow-fx"
]
ktor-server = [
    "ktor-server-core",
    "ktor-server-status-pages",
    "ktor-server-content-negotiation",
    "ktor-server-double-receive",
    "ktor-server-defaultheaders",
    "ktor-server-forwarded",
    "ktor-server-openapi",
    "ktor-server-compression",
    "ktor-server-call-logging",
    "ktor-server-call-id",
    "ktor-server-netty",
    "ktor-server-auth",
    "ktor-serialization",
    "ktor-serialization-jackson",
]
ktor-client = [
    "ktor-client-content-negotiation",
    "ktor-client-serialization"
]
kotest = [
    "kotest-assertionsCore",
    "kotest-frameworkEngine",
    "kotest-property",
    "kotest-runnerJUnit5",
    "kotest-arrow",
    "kotest-arrow-fx",
    "kotest-testcontainers"
]
cohort = [
    "cohort-core",
    "cohort-ktor",
    "cohort-hikari"
]

[plugins]
arrowGradleConfig-formatter = { id = "io.arrow-kt.arrow-gradle-config-formatter", version.ref = "arrowGradleConfig" }
arrowGradleConfig-kotlin = { id = "io.arrow-kt.arrow-gradle-config-kotlin", version.ref = "arrowGradleConfig" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest-plugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }